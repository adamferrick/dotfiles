set-option global bundle_path "%sh{ echo $HOME }/.local/share/kak/bundle"
bundle kak-crosshairs https://github.com/insipx/kak-crosshairs

eval %sh{ kak-tree-sitter -dks --init $kak_session }

colorscheme callisto

add-highlighter global/ number-lines -separator "| " -hlcursor

hook global BufCreate .*[.](scd|sc) %{ set buffer filetype supercollider }

map global insert <tab> '<a-;><a-gt>'
map global insert <s-tab> '<a-;><a-lt>'
set global disabled_hooks .*-indent
hook global WinCreate [^*]* %{editorconfig-load}
hook global InsertKey <ret> indent-from-above
hook global NormalKey o indent-from-above
hook global NormalKey O indent-from-below
hook global ModeChange pop:insert:.* trim-indent
define-command -hidden indent-from-above %{
    evaluate-commands -draft -itersel %{
        # Preserve previous line indent
        try %{ execute-keys -draft <semicolon>K<a-&> }
        # Clean up whitespace on previous line
        try %{ execute-keys -draft kx s \h+$ <ret>d }
    }
}
define-command -hidden indent-from-below %{
    evaluate-commands -draft -itersel %{
        # Preserve previous line indent (it's a little harder to go going backwards...)
        try %{ execute-keys -draft <semicolon>Zj<a-L><a-z>a<a-&> }
        # Clean up whitespace on previous line
        try %{ execute-keys -draft jx s \h+$ <ret>d }
    }
}
define-command -hidden trim-indent %{
    evaluate-commands -no-hooks -draft -itersel %{
        execute-keys x
        try %{ execute-keys -draft s \h + $ <ret> d }
    }
}

hook -once global WinCreate .* %{cursorline}

map global insert <a-space> <esc>

# System clipboard
# y/d yank/delete using internal clipboard and system clipboard at once
# p - paste from internal clipboard
# <space>p - paste after from system clipboard
# <space>P - paste before from system clipboard
# <space>R - replace selection from system clipboard
hook global RegisterModified '"' %{ nop %sh{
    printf %s "$kak_main_reg_dquote" | xclip -in -selection clipboard >&- 2>&-
}}
map global user p '<a-!>xclip -out -selection clipboard<ret>'
map global user P '!xclip -out -selection clipboard<ret>'
map global user R '|xclip -out -selection clipboard<ret>'
